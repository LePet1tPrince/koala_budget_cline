version: '3.8'

services:
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://koala_user:koala_password@db:5432/koala_budget
      - DEBUG=True
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_SECRET=${PLAID_SECRET}
      - PLAID_ENV=sandbox
    command: >
      sh -c "python manage.py makemigrations accounts &&
             python manage.py migrate --run-syncdb &&
             python manage.py runserver 0.0.0.0:8000"

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=koala_user
      - POSTGRES_PASSWORD=koala_password
      - POSTGRES_DB=koala_budget
    ports:
      - "5432:5432"

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost/api
    depends_on:
      - backend

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  celery:
    build: ./backend
    command: celery -A core worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgres://koala_user:koala_password@db:5432/koala_budget
      - REDIS_URL=redis://redis:6379/0
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_SECRET=${PLAID_SECRET}
      - PLAID_ENV=sandbox

  celery-beat:
    build: ./backend
    command: celery -A core beat -l info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgres://koala_user:koala_password@db:5432/koala_budget
      - REDIS_URL=redis://redis:6379/0
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_SECRET=${PLAID_SECRET}
      - PLAID_ENV=sandbox

volumes:
  postgres_data:
  frontend_node_modules:
